{"version":3,"sources":["webpack:///src/views/UsersManager.vue","webpack:///./src/views/UsersManager.vue","webpack:///./src/views/UsersManager.vue?a044"],"names":["items","UsersManager","data","columns","key","label","sortable","class","sortDirection","currentPage","perPage","totalRows","length","parameters","_BDData","pageOptions","sortBy","sortDesc","filter","modalInfo","title","visible","mode","modalChangePassword","user","modalErrors","clients_by_company","computed","extends_default","sortOptions","this","f","map","text","value","Object","vuex_esm","created","_this","asyncToGenerator_default","regenerator_default","a","mark","_callee","wrap","_context","prev","next","refreshData","clearObj","stop","mounted","$store","commit","mutations_type","methods","isVisible","fieldId","isAdmin","profileType","isClient","profileName","config","tc","process","item","index","button","_this2","_callee2","idCompanyToConsult","_context2","id","JSON","parse","stringify_default","company_id","consultClients","currentUser","$root","$emit","dispatch","actions_type","t0","push","message","isCompany","idCompany","_this3","_callee3","dataConsult","response","_context3","api","post","endPoints","urlClients","sent","console","error","changeCompany","email","company","client_id","password","profiles_type","resetModalInfo","onFiltered","filteredItems","_this4","_callee4","_context4","usersByCompany","status","onSubmit","evt","_this5","preventDefault","$validator","validate","then","result","username","save","users","obj","servicePath","_this6","_callee5","_context5","update","create","alert","remove","_this7","_callee6","_context6","confirm","__vue_styles__","context","__webpack_require__","Component","component_normalizer","_vm","_h","$createElement","_c","_self","attrs","fluid","staticClass","md","horizontal","$t","placeholder","model","callback","$$v","expression","_v","disabled","on","click","$event","_s","options","slot","domProps","type","size","variant","stopPropagation","target","show-empty","hover","stacked","fields","current-page","per-page","sort-by","sort-desc","sort-direction","emptyText","emptyFilteredText","responsive","update:sortBy","update:sortDesc","filtered","scopedSlots","_u","fn","row","first","last","_l","total-rows","directives","name","rawName","ref","lazy","hide","ok","show","submit","profiles","$set","errors","has","_e","companies","value-field","text-field","change","autocomplete","input","composing","data-vv-as","__webpack_exports__"],"mappings":"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","file":"static/js/4.ef0703c76b024a89f060.js","sourcesContent":["<template>\r\n  <b-container fluid>\r\n    <!-- User Interface controls -->\r\n    <b-card>\r\n    <b-row>\r\n      <b-col md=\"6\" class=\"my-1\">\r\n          <b-form-group horizontal :label=\"$t('message.filtro')\" class=\"mb-0\">\r\n            <b-input-group>\r\n              <b-form-input v-model=\"filter\" :placeholder=\"$t('message.type_to_search')\" />\r\n              <b-input-group-append>\r\n                <b-btn :disabled=\"!filter\" @click=\"filter = ''\">{{$t('message.clear')}}</b-btn>\r\n              </b-input-group-append>\r\n            </b-input-group>\r\n          </b-form-group>\r\n        </b-col>\r\n        <b-col md=\"6\" class=\"my-1\">\r\n          <b-form-group horizontal :label=\"$t('message.sort')\" class=\"mb-0\">\r\n            <b-input-group>\r\n              <b-form-select v-model=\"sortBy\" :options=\"sortOptions\">\r\n                <option slot=\"first\" :value=\"null\">-- -- --</option>\r\n              </b-form-select>\r\n              <b-form-select :disabled=\"!sortBy\" v-model=\"sortDesc\" slot=\"append\">\r\n                <option :value=\"false\">Asc</option>\r\n                <option :value=\"true\">Desc</option>\r\n              </b-form-select>\r\n            </b-input-group>\r\n          </b-form-group>\r\n        </b-col>\r\n      </b-row>\r\n      <b-row>\r\n        <b-col md=\"6\" class=\"my-1\">\r\n          <b-form-group horizontal :label=\"$t('message.peer_page')\" class=\"mb-0\">\r\n            <b-form-select :options=\"pageOptions\" v-model=\"perPage\" />\r\n          </b-form-group>\r\n        </b-col>\r\n      </b-row>\r\n    </b-card>\r\n\r\n    <b-card class=\"card-body\">\r\n      <b-row>\r\n        <b-col>\r\n        <!-- Create button -->\r\n        <b-button type=\"submit\" size=\"m\" variant=\"primary\" class=\"float-right my-1\" id=\"create\" @click.stop=\"process(null, null, $event.target)\">\r\n          <i class=\"fa icon-plus\"></i> {{ $t(\"message.create\") }}\r\n        </b-button>\r\n      </b-col>\r\n      </b-row>\r\n      <b-row>\r\n        <!-- Main table to list -->\r\n        <b-col md=\"12\">\r\n        <b-table show-empty hover\r\n                stacked=\"sm\"\r\n                :items=\"items\"\r\n                :fields=\"columns\"\r\n                :current-page=\"currentPage\"\r\n                :per-page=\"perPage\"\r\n                :filter=\"filter\"\r\n                :sort-by.sync=\"sortBy\"\r\n                :sort-desc.sync=\"sortDesc\"\r\n                :sort-direction=\"sortDirection\"\r\n                :emptyText = \"$t('message.no_resultados')\"\r\n                :emptyFilteredText = \"$t('message.no_data_filter')\"\r\n                responsive\r\n                @filtered=\"onFiltered\"\r\n        >\r\n          <template slot=\"name\" slot-scope=\"row\">{{row.value.first}} {{row.value.last}}</template>\r\n          <template slot=\"client_company_name\" slot-scope=\"row\">{{row.value? row.value:'--'}}</template>\r\n          <template slot=\"profileType\" slot-scope=\"row\">\r\n            {{profileName(row.value)}}\r\n          </template>\r\n          <template slot=\"actions\" slot-scope=\"row\">\r\n            <!-- We use @click.stop here to prevent a 'row-clicked' event from also happening -->\r\n            <!-- Ojo el id del button es importante para el metodo que procesa la logica no cambiarlo -->\r\n            <b-button size=\"sm\" id=\"edit\" @click.stop=\"process(row.item, row.index, $event.target)\">\r\n              {{$t('message.edit')}}\r\n            </b-button>\r\n            <b-button size=\"sm\" id=\"changePassword\" @click.prevent=\"process(row.item, row.index, $event.target)\" variant=\"secondary\">\r\n              {{$t('message.change_password')}}\r\n            </b-button>\r\n            <b-button size=\"sm\" id=\"remove\" @click.prevent=\"remove(row.item.id)\" variant=\"danger\">\r\n              {{$t('message.delete')}}\r\n            </b-button>\r\n          </template>\r\n          <template slot=\"row-details\" slot-scope=\"row\">\r\n            <b-card>\r\n              <ul>\r\n                <li v-for=\"(value, key) in row.item\" :key=\"key\">{{ key }}: {{ value}}</li>\r\n              </ul>\r\n            </b-card>\r\n          </template>\r\n        </b-table>\r\n      </b-col>\r\n      </b-row>\r\n      <b-row>\r\n        <b-col md=\"6\" class=\"my-1\">\r\n          <b-pagination :total-rows=\"totalRows\" :per-page=\"perPage\" v-model=\"currentPage\" class=\"my-0\" />\r\n        </b-col>\r\n      </b-row>\r\n    </b-card>\r\n    <!-- Info modal ok-only solo mostraria el boton de ok-->\r\n    <!-- Modal para crear usuarios nuevos -->\r\n    <b-modal id=\"modalInfo\"  ref=\"modalCreateUpdate\" @hide=\"resetModalInfo\" @ok=\"onSubmit\" :title=\"modalInfo.title\" lazy v-show=\"modalInfo.visible\">\r\n        <b-alert :show=\"modalErrors.length > 0\" variant=\"danger\" >\r\n          <ul class=\"error-messages\">\r\n            <li v-for=\"(value, key) in modalErrors\" :key=\"key\">\r\n              {{value}}\r\n            </li>\r\n          </ul>\r\n        </b-alert>\r\n       <form @submit.prevent=\"onSubmit\">\r\n        <div v-show=\"modalInfo.mode === 'create' || modalInfo.mode === 'edit'\">\r\n        <!-- Perfil -->\r\n        <b-input-group class=\"mb-3\" v-show=\"isVisible('profileType')\" >\r\n            <b-input-group-prepend>\r\n              <b-input-group-text><i class=\"icon-grid\"></i></b-input-group-text>\r\n            </b-input-group-prepend>\r\n            <b-form-select name=\"profileType\" id=\"profileType\" v-model=\"user.profileType\" :options=\"parameters.profiles\"\r\n              v-validate=\"isVisible('profileType')?'required':''\">\r\n              <template slot=\"first\">\r\n                <option :value=\"null\">{{$t('message.seleccion_perfil')}}</option>\r\n              </template>\r\n            </b-form-select>\r\n            <p class=\"text-danger\" v-if=\"errors.has('profileType')\">{{ errors.first('profileType') }}</p>\r\n        </b-input-group>\r\n        <!-- Compania -->\r\n        <!-- No Se debe seleccionar la compañía si el admin esta creando otro usuario de tipo admin -->\r\n        <!-- Tampoco cuando es un usuario de una compañía -->\r\n        <b-input-group class=\"mb-3\" v-show=\"isVisible('companies')\">\r\n            <b-input-group-prepend>\r\n              <b-input-group-text><i class=\"icon-grid\"></i></b-input-group-text>\r\n            </b-input-group-prepend>\r\n            <b-form-select name=\"companies\" id=\"companies\" v-model=\"user.company_id\" :options=\"companies\"\r\n            @change=\"changeCompany\" value-field=\"id\" text-field=\"name\" v-validate=\"isVisible('companies')?'required':''\">\r\n              <template slot=\"first\">\r\n                <option :value=\"null\">{{$t('message.seleccion_compania')}}</option>\r\n              </template>\r\n            </b-form-select>\r\n            <p class=\"text-danger\" v-if=\"errors.has('companies')\">{{ errors.first('companies') }}</p>\r\n        </b-input-group>\r\n        <!-- Lista de clientes -->\r\n        <!-- Se debe seleccionar un cliente si un admin o una compañia estan creando un usuario de tipo cliente -->\r\n        <b-input-group class=\"mb-3\" v-show=\"isVisible('cliente')\">\r\n          <b-input-group-prepend>\r\n            <b-input-group-text><i class=\"icon-grid\"></i></b-input-group-text>\r\n          </b-input-group-prepend>\r\n          <b-form-select name=\"cliente\" id=\"cliente\" v-model=\"user.client_id\" :options=\"clients_by_company\" text-field=\"client_company_name\"  v-validate=\"isVisible('cliente')?'required':''\">\r\n             <template slot=\"first\">\r\n                <option :value=\"null\">{{$t('message.seleccion_cliente')}}</option>\r\n            </template>\r\n          </b-form-select>\r\n          <p class=\"text-danger\" v-if=\"errors.has('cliente')\">{{ errors.first('cliente') }}</p>\r\n        </b-input-group>\r\n        <!-- Email -->\r\n        <!-- Para verificar email repetidos https://codesandbox.io/s/y3504yr0l1?initialpath=%2F%23%2Fbackend&module=%2Fsrc%2Fcomponents%2FBackend.vue  -->\r\n        <b-input-group class=\"mb-3\">\r\n          <b-input-group-prepend>\r\n            <b-input-group-text><i class=\"icon-user\"></i></b-input-group-text>\r\n          </b-input-group-prepend>\r\n          <input type=\"text\" class=\"form-control\" :placeholder=\"$t('message.email')\" name=\"email\" id=\"email\" v-model=\"user.email\" autocomplete='email'  v-validate=\"'required|email'\">\r\n          <p class=\"text-danger\" v-if=\"errors.has('email')\">{{ errors.first('email') }}</p>\r\n        </b-input-group>\r\n        </div> <!-- fin de campos que piden los datos basicos del usuario -->\r\n        <!-- password-->\r\n        <div v-show=\"isVisible('password')\">\r\n        <!-- Password -->\r\n        <b-input-group class=\"mb-3\">\r\n          <b-input-group-prepend>\r\n            <b-input-group-text><i class=\"icon-lock\"></i></b-input-group-text>\r\n          </b-input-group-prepend>\r\n          <!-- Se pone logica para que la validacion solo se haga cuando el campo este visible -->\r\n          <input v-validate=\"isVisible('password')?'required|min:8': ''\"  class=\"form-control\" v-model=\"user.password\" name=\"password\" type=\"password\" :placeholder=\"$t('message.pwd')\" ref=\"password\">\r\n          <p class=\"text-danger\" v-if=\"errors.has('password')\">{{ errors.first('password') }}</p>\r\n        </b-input-group>\r\n        <!-- Repetir el password -->\r\n        <b-input-group class=\"mb-4\">\r\n          <b-input-group-prepend>\r\n            <b-input-group-text><i class=\"icon-lock\"></i></b-input-group-text>\r\n          </b-input-group-prepend>\r\n          <input type=\"password\" class=\"form-control\" name=\"verificarPassword\" :placeholder=\"$t('message.repeatPwd')\" v-validate=\"isVisible('password')?'required|confirmed:password':''\" data-vv-as=\"password\">\r\n          <p class=\"text-danger\" v-if=\"errors.has('verificarPassword')\">{{ errors.first('verificarPassword') }}</p>\r\n        </b-input-group>\r\n        </div>\r\n       </form>\r\n    </b-modal>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\nimport api from '@/services/api.js'\r\nimport i18n from '@/lang/config'\r\nimport BDData from '@/common/_BDData'\r\nimport { mapGetters } from 'vuex'\r\nimport { SET_LOADING, SET_ERROR, CLEAR_ERRORS } from '@/store/mutations.type'\r\nimport { FETCH_COMPANIES } from '@/store/actions.type'\r\nimport { CLIENT } from '@/store/profiles.type'\r\nconst items = []\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      columns: [\r\n        { key: 'email', label: 'Email', sortable: true, class: 'text-center' },\r\n        { key: 'company.name', label: 'Compañía', sortable: true, sortDirection: 'desc' },\r\n        { key: 'client.client_company_name', label: 'Cliente', sortable: true, class: 'text-center' },\r\n        { key: 'profileType', label: 'Perfil', sortable: true, class: 'text-center' },\r\n        /* { key: 'survey_conf_desc', label: i18n.tc('message.survey_conf_desc'), sortable: true }, */\r\n        { key: 'actions', label: 'Acciones', class: 'scaleWidth, text-center' }\r\n      ],\r\n      currentPage: 1,\r\n      perPage: 10,\r\n      totalRows: items.length,\r\n      parameters: BDData.parameters,\r\n      pageOptions: BDData.pageOptions,\r\n      sortBy: null,\r\n      sortDesc: false,\r\n      sortDirection: 'asc',\r\n      filter: null,\r\n      modalInfo: {title: '', visible: false, mode: 'create'},\r\n      modalChangePassword: {title: '', visible: false},\r\n      items: [],\r\n      user: {},\r\n      modalErrors: [], // para mostrar los errores de creacion/edicion en el modal\r\n      clients_by_company: {}\r\n    }\r\n  },\r\n  computed: {\r\n    sortOptions () {\r\n      // Create an options list from our columns\r\n      return this.columns\r\n        .filter(f => f.sortable)\r\n        .map(f => { return { text: f.label, value: f.key } })\r\n    },\r\n    ...mapGetters(['companies', 'clients', 'isAdmin', 'isCompany', 'profile', 'currentUser', 'isCompany']) // Trae los getters\r\n  },\r\n  async created () {\r\n    // Refresh data llama al listar  y crearObj crea un objeto listo para ser configurado\r\n    this.refreshData()\r\n    this.user = this.clearObj()\r\n  },\r\n  mounted: function () {\r\n    this.$store.commit(CLEAR_ERRORS)\r\n  },\r\n  methods: {\r\n    isVisible (fieldId) {\r\n      // Controla visualizacion y renderizado de las validaciones\r\n      if (fieldId === 'companies' && this.isAdmin && this.user.profileType > 1) {\r\n        return true // Además de las condicioens basicas, si el usuario que se esta creando es administrador no se pregunta la compañía ni el cliente\r\n      }\r\n      if (fieldId === 'cliente' && (this.isAdmin || this.isClient) && this.user.profileType > 2) {\r\n        return true // Además de las condicioens basicas, si el usuario que se esta creando es compania o administrador no se pregunta la compañía ni el cliente\r\n      }\r\n      if (fieldId === 'profileType' && (this.isAdmin)) { // Solo los admin pueden escoger el perfil\r\n        return true\r\n      }\r\n      if (fieldId === 'password' && (this.modalInfo.mode === 'create' || this.modalInfo.mode === 'changePassword')) {\r\n        // No se muestra en edicion de usuarios\r\n        return true\r\n      }\r\n      return false\r\n    },\r\n    profileName (profileType) {\r\n      switch (profileType) {\r\n        case 1: return i18n.tc('message.administrador')\r\n        case 2: return i18n.tc('message.compania')\r\n        case 3: return i18n.tc('message.cliente')\r\n      }\r\n    },\r\n    async process (item, index, button) {\r\n      // Metodo que se llama en caso de crear o editar desde los botones de la tabla\r\n      var idCompanyToConsult = null\r\n      this.$store.commit(CLEAR_ERRORS)\r\n      this.modalErrors = []\r\n      this.$store.commit(SET_LOADING, true)\r\n      if (button.id === 'edit') {\r\n        // Se le pone la información a los campos del modal con un metodo para copiar\r\n        // los objetos de manera que no se vayan a cambian si el usuario cancela\r\n        this.user = JSON.parse(JSON.stringify(item))\r\n        this.modalInfo.title = i18n.tc('message.edit')\r\n        this.modalInfo.mode = 'edit'\r\n        // La compañía es la del usuario a editar\r\n        idCompanyToConsult = this.user.company_id\r\n        // Si es visble el campo de clientes entonces se carga la lista desplegable de clientes para la compania definida\r\n        if (this.isVisible('cliente')) {\r\n          this.consultClients(idCompanyToConsult)\r\n        }\r\n      } else if (button.id === 'create') {\r\n        this.user = this.clearObj()\r\n        this.modalInfo.mode = 'create'\r\n        this.modalInfo.title = i18n.tc('message.create')\r\n        // La compañia es la del usuario autenticado cuando se esta haciendo crear\r\n        idCompanyToConsult = this.currentUser.company_id\r\n      } else if (button.id === 'changePassword') {\r\n        // Se carga el usuario\r\n        this.user = JSON.parse(JSON.stringify(item))\r\n        // Se pone en el titulo el nombre del cliente para el que se quiere configuraar\r\n        this.modalInfo.mode = 'changePassword'\r\n        this.modalInfo.title = i18n.tc('message.change_password')\r\n        // Se pasan los datos a la configuracion\r\n        this.$root.$emit('bv::show::modal', 'modalChangePassword')\r\n      }\r\n      // Is admin viene de los getters del store\r\n      if (this.isAdmin) {\r\n        try {\r\n          // Se trae la lista de compañías del store\r\n          await this.$store.dispatch(FETCH_COMPANIES)\r\n        } catch (exception) {\r\n          this.modalErrors.push(exception.message)\r\n        }\r\n      } else if (this.isCompany) { // El perfil autenticado es el de una compania\r\n        this.consultClients(idCompanyToConsult)\r\n      }\r\n      // Abre el modal modalInfo es el id del modal\r\n      this.modalInfo.visible = true\r\n      this.$root.$emit('bv::show::modal', 'modalInfo', button)\r\n    },\r\n    async consultClients (idCompany) {\r\n      try {\r\n        this.$store.commit(SET_LOADING, true)\r\n        let dataConsult = {}\r\n        dataConsult.idCompany = idCompany\r\n        dataConsult.isAdmin = this.isAdmin // tomado del store\r\n        dataConsult.isCompany = this.isCompany // tomado del store\r\n        var response = await api.post(dataConsult, BDData.endPoints.urlClients)\r\n        // Estuvo exitosa la busqueda\r\n        this.clients_by_company = response.data\r\n        this.modalErrors = [] // Se limpian los errores del modal en caso de que existan\r\n        this.$store.commit(SET_LOADING, false)\r\n      } catch (exception) {\r\n        console.error(JSON.stringify(exception.message))\r\n        this.modalErrors.push(exception.message)\r\n        this.$store.commit(SET_LOADING, false)\r\n      }\r\n    },\r\n    changeCompany: function (value) {\r\n      // Si cambia la compañia seleccionada se cambia entonces tambien la lista de clientes en la lista desplegable\r\n      this.consultClients(value)\r\n    },\r\n    clearObj () {\r\n      // Se llama este metodo cuando se selecciona el boton para crear o cuando se guarda para dajar el objeto que tendrá la información preparado\r\n      // Se toma del store el profile para decidir como se ajusta la inicialiacion de valores\r\n      var user = {id: null, email: null, company: null, company_id: null, client_id: null, password: null, profileType: null}\r\n      // Los usuarios que crea un nueva compañia son iguales a la compañia que los esta creando\r\n      if (this.isCompany) {\r\n        user.company = this.currentUser.company\r\n        user.company_id = this.currentUser.company_id\r\n        // La compañia solo puede crear clients\r\n        user.profileType = CLIENT\r\n      }\r\n      // No se agregan mas casos pues si es administrador puede seleccionar y si es cliente o participante no deberia poder ver esta opcion\r\n      return user\r\n    },\r\n    resetModalInfo () {\r\n      this.modalInfo.title = ''\r\n    },\r\n    onFiltered (filteredItems) {\r\n      // Trigger pagination to update the number of buttons/pages due to filtering\r\n      this.totalRows = filteredItems.length\r\n      this.currentPage = 1\r\n    },\r\n    async refreshData () {\r\n      try {\r\n        this.$store.commit(SET_LOADING, true)\r\n        // Se limpia el objeto de referencia\r\n        this.clearObj()\r\n        let dataConsult = {}\r\n        if (this.isAdmin) {\r\n          // Para que traiga los usuarios de todas las compañías\r\n          dataConsult.idCompany = null\r\n        } else if (this.isCompany) {\r\n          // Se parametrizan la info para que se consulten los datos solo de la compania del usuario autenticado\r\n          dataConsult.idCompany = this.currentUser.company_id\r\n        }\r\n        dataConsult.isAdmin = this.isAdmin // tomado del store\r\n        dataConsult.isCompany = this.isCompany // tomado del store\r\n        var response = await api.post(dataConsult, BDData.endPoints.usersByCompany)\r\n        // Estuvo exitosa la busqueda\r\n        if (response.status === 200) {\r\n          this.items = response.data\r\n        } else {\r\n          // Se pone vacio para evitar errores\r\n          this.items = []\r\n        }\r\n      } catch (exception) {\r\n        this.$store.commit(SET_ERROR, exception.message)\r\n      }\r\n      this.$store.commit(SET_LOADING, false)\r\n    },\r\n    onSubmit (evt) {\r\n      // Evita que se cierre\r\n      evt.preventDefault()\r\n      // Se validan los resultados\r\n      this.$validator.validate().then(result => {\r\n        // Si no hay errores\r\n        if (result) {\r\n          /* CREAR UN NUEVO USUARIO */\r\n          // El nombre de usuario y el email se hacen iguales, django necesita el username\r\n          this.user.username = this.user.email\r\n          this.save(this.user, BDData.endPoints.users)\r\n          // this.$root.$emit('bv::hide::modal', 'modalInfo')\r\n        }\r\n      })\r\n    },\r\n    async save (obj, servicePath) {\r\n      try {\r\n        var response = null\r\n        if (obj.id && obj.id !== 0) {\r\n          response = await api.update(obj.id, obj, servicePath)\r\n        } else {\r\n          response = await api.create(obj, servicePath)\r\n        }\r\n        // Fue exitoso\r\n        if (response.status >= 200 && response.status <= 300) {\r\n          alert(i18n.tc('message.guardar_modificar_exito'))\r\n          await this.refreshData()\r\n          this.modalInfo.visible = false\r\n        }\r\n      } catch (exception) {\r\n        this.modalErrors.push(exception.message)\r\n      }\r\n    },\r\n    async remove (id) {\r\n      if (confirm(i18n.tc('message.confirm_delete_message'))) {\r\n        try {\r\n          var response = await api.remove(id, BDData.endPoints.users)\r\n          // Fue exitoso\r\n          if (response.status >= 200 && response.status <= 300) {\r\n            alert(i18n.tc('message.eliminar_exito'))\r\n            await this.refreshData()\r\n          }\r\n        } catch (exception) {\r\n          this.$store.commit(SET_ERROR, exception.message)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.scaleWidth {\r\n  width: 30%;\r\n  /* text-align: center  */\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/UsersManager.vue","function injectStyle (context) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"optionsId\\\":\\\"0\\\",\\\"vue\\\":true,\\\"id\\\":\\\"data-v-278f12ec\\\",\\\"scoped\\\":true,\\\"sourceMap\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./UsersManager.vue\")\n}\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./UsersManager.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./UsersManager.vue\"\n/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-278f12ec\\\",\\\"hasScoped\\\":true,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./UsersManager.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-278f12ec\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/UsersManager.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',{attrs:{\"fluid\":\"\"}},[_c('b-card',[_c('b-row',[_c('b-col',{staticClass:\"my-1\",attrs:{\"md\":\"6\"}},[_c('b-form-group',{staticClass:\"mb-0\",attrs:{\"horizontal\":\"\",\"label\":_vm.$t('message.filtro')}},[_c('b-input-group',[_c('b-form-input',{attrs:{\"placeholder\":_vm.$t('message.type_to_search')},model:{value:(_vm.filter),callback:function ($$v) {_vm.filter=$$v},expression:\"filter\"}}),_vm._v(\" \"),_c('b-input-group-append',[_c('b-btn',{attrs:{\"disabled\":!_vm.filter},on:{\"click\":function($event){_vm.filter = ''}}},[_vm._v(_vm._s(_vm.$t('message.clear')))])],1)],1)],1)],1),_vm._v(\" \"),_c('b-col',{staticClass:\"my-1\",attrs:{\"md\":\"6\"}},[_c('b-form-group',{staticClass:\"mb-0\",attrs:{\"horizontal\":\"\",\"label\":_vm.$t('message.sort')}},[_c('b-input-group',[_c('b-form-select',{attrs:{\"options\":_vm.sortOptions},model:{value:(_vm.sortBy),callback:function ($$v) {_vm.sortBy=$$v},expression:\"sortBy\"}},[_c('option',{attrs:{\"slot\":\"first\"},domProps:{\"value\":null},slot:\"first\"},[_vm._v(\"-- -- --\")])]),_vm._v(\" \"),_c('b-form-select',{attrs:{\"slot\":\"append\",\"disabled\":!_vm.sortBy},slot:\"append\",model:{value:(_vm.sortDesc),callback:function ($$v) {_vm.sortDesc=$$v},expression:\"sortDesc\"}},[_c('option',{domProps:{\"value\":false}},[_vm._v(\"Asc\")]),_vm._v(\" \"),_c('option',{domProps:{\"value\":true}},[_vm._v(\"Desc\")])])],1)],1)],1)],1),_vm._v(\" \"),_c('b-row',[_c('b-col',{staticClass:\"my-1\",attrs:{\"md\":\"6\"}},[_c('b-form-group',{staticClass:\"mb-0\",attrs:{\"horizontal\":\"\",\"label\":_vm.$t('message.peer_page')}},[_c('b-form-select',{attrs:{\"options\":_vm.pageOptions},model:{value:(_vm.perPage),callback:function ($$v) {_vm.perPage=$$v},expression:\"perPage\"}})],1)],1)],1)],1),_vm._v(\" \"),_c('b-card',{staticClass:\"card-body\"},[_c('b-row',[_c('b-col',[_c('b-button',{staticClass:\"float-right my-1\",attrs:{\"type\":\"submit\",\"size\":\"m\",\"variant\":\"primary\",\"id\":\"create\"},on:{\"click\":function($event){$event.stopPropagation();_vm.process(null, null, $event.target)}}},[_c('i',{staticClass:\"fa icon-plus\"}),_vm._v(\" \"+_vm._s(_vm.$t(\"message.create\"))+\"\\n      \")])],1)],1),_vm._v(\" \"),_c('b-row',[_c('b-col',{attrs:{\"md\":\"12\"}},[_c('b-table',{attrs:{\"show-empty\":\"\",\"hover\":\"\",\"stacked\":\"sm\",\"items\":_vm.items,\"fields\":_vm.columns,\"current-page\":_vm.currentPage,\"per-page\":_vm.perPage,\"filter\":_vm.filter,\"sort-by\":_vm.sortBy,\"sort-desc\":_vm.sortDesc,\"sort-direction\":_vm.sortDirection,\"emptyText\":_vm.$t('message.no_resultados'),\"emptyFilteredText\":_vm.$t('message.no_data_filter'),\"responsive\":\"\"},on:{\"update:sortBy\":function($event){_vm.sortBy=$event},\"update:sortDesc\":function($event){_vm.sortDesc=$event},\"filtered\":_vm.onFiltered},scopedSlots:_vm._u([{key:\"name\",fn:function(row){return [_vm._v(_vm._s(row.value.first)+\" \"+_vm._s(row.value.last))]}},{key:\"client_company_name\",fn:function(row){return [_vm._v(_vm._s(row.value? row.value:'--'))]}},{key:\"profileType\",fn:function(row){return [_vm._v(\"\\n          \"+_vm._s(_vm.profileName(row.value))+\"\\n        \")]}},{key:\"actions\",fn:function(row){return [_c('b-button',{attrs:{\"size\":\"sm\",\"id\":\"edit\"},on:{\"click\":function($event){$event.stopPropagation();_vm.process(row.item, row.index, $event.target)}}},[_vm._v(\"\\n            \"+_vm._s(_vm.$t('message.edit'))+\"\\n          \")]),_vm._v(\" \"),_c('b-button',{attrs:{\"size\":\"sm\",\"id\":\"changePassword\",\"variant\":\"secondary\"},on:{\"click\":function($event){$event.preventDefault();_vm.process(row.item, row.index, $event.target)}}},[_vm._v(\"\\n            \"+_vm._s(_vm.$t('message.change_password'))+\"\\n          \")]),_vm._v(\" \"),_c('b-button',{attrs:{\"size\":\"sm\",\"id\":\"remove\",\"variant\":\"danger\"},on:{\"click\":function($event){$event.preventDefault();_vm.remove(row.item.id)}}},[_vm._v(\"\\n            \"+_vm._s(_vm.$t('message.delete'))+\"\\n          \")])]}},{key:\"row-details\",fn:function(row){return [_c('b-card',[_c('ul',_vm._l((row.item),function(value,key){return _c('li',{key:key},[_vm._v(_vm._s(key)+\": \"+_vm._s(value))])}))])]}}])})],1)],1),_vm._v(\" \"),_c('b-row',[_c('b-col',{staticClass:\"my-1\",attrs:{\"md\":\"6\"}},[_c('b-pagination',{staticClass:\"my-0\",attrs:{\"total-rows\":_vm.totalRows,\"per-page\":_vm.perPage},model:{value:(_vm.currentPage),callback:function ($$v) {_vm.currentPage=$$v},expression:\"currentPage\"}})],1)],1)],1),_vm._v(\" \"),_c('b-modal',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.modalInfo.visible),expression:\"modalInfo.visible\"}],ref:\"modalCreateUpdate\",attrs:{\"id\":\"modalInfo\",\"title\":_vm.modalInfo.title,\"lazy\":\"\"},on:{\"hide\":_vm.resetModalInfo,\"ok\":_vm.onSubmit}},[_c('b-alert',{attrs:{\"show\":_vm.modalErrors.length > 0,\"variant\":\"danger\"}},[_c('ul',{staticClass:\"error-messages\"},_vm._l((_vm.modalErrors),function(value,key){return _c('li',{key:key},[_vm._v(\"\\n            \"+_vm._s(value)+\"\\n          \")])}))]),_vm._v(\" \"),_c('form',{on:{\"submit\":function($event){$event.preventDefault();return _vm.onSubmit($event)}}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.modalInfo.mode === 'create' || _vm.modalInfo.mode === 'edit'),expression:\"modalInfo.mode === 'create' || modalInfo.mode === 'edit'\"}]},[_c('b-input-group',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isVisible('profileType')),expression:\"isVisible('profileType')\"}],staticClass:\"mb-3\"},[_c('b-input-group-prepend',[_c('b-input-group-text',[_c('i',{staticClass:\"icon-grid\"})])],1),_vm._v(\" \"),_c('b-form-select',{directives:[{name:\"validate\",rawName:\"v-validate\",value:(_vm.isVisible('profileType')?'required':''),expression:\"isVisible('profileType')?'required':''\"}],attrs:{\"name\":\"profileType\",\"id\":\"profileType\",\"options\":_vm.parameters.profiles},model:{value:(_vm.user.profileType),callback:function ($$v) {_vm.$set(_vm.user, \"profileType\", $$v)},expression:\"user.profileType\"}},[_c('template',{slot:\"first\"},[_c('option',{domProps:{\"value\":null}},[_vm._v(_vm._s(_vm.$t('message.seleccion_perfil')))])])],2),_vm._v(\" \"),(_vm.errors.has('profileType'))?_c('p',{staticClass:\"text-danger\"},[_vm._v(_vm._s(_vm.errors.first('profileType')))]):_vm._e()],1),_vm._v(\" \"),_c('b-input-group',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isVisible('companies')),expression:\"isVisible('companies')\"}],staticClass:\"mb-3\"},[_c('b-input-group-prepend',[_c('b-input-group-text',[_c('i',{staticClass:\"icon-grid\"})])],1),_vm._v(\" \"),_c('b-form-select',{directives:[{name:\"validate\",rawName:\"v-validate\",value:(_vm.isVisible('companies')?'required':''),expression:\"isVisible('companies')?'required':''\"}],attrs:{\"name\":\"companies\",\"id\":\"companies\",\"options\":_vm.companies,\"value-field\":\"id\",\"text-field\":\"name\"},on:{\"change\":_vm.changeCompany},model:{value:(_vm.user.company_id),callback:function ($$v) {_vm.$set(_vm.user, \"company_id\", $$v)},expression:\"user.company_id\"}},[_c('template',{slot:\"first\"},[_c('option',{domProps:{\"value\":null}},[_vm._v(_vm._s(_vm.$t('message.seleccion_compania')))])])],2),_vm._v(\" \"),(_vm.errors.has('companies'))?_c('p',{staticClass:\"text-danger\"},[_vm._v(_vm._s(_vm.errors.first('companies')))]):_vm._e()],1),_vm._v(\" \"),_c('b-input-group',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isVisible('cliente')),expression:\"isVisible('cliente')\"}],staticClass:\"mb-3\"},[_c('b-input-group-prepend',[_c('b-input-group-text',[_c('i',{staticClass:\"icon-grid\"})])],1),_vm._v(\" \"),_c('b-form-select',{directives:[{name:\"validate\",rawName:\"v-validate\",value:(_vm.isVisible('cliente')?'required':''),expression:\"isVisible('cliente')?'required':''\"}],attrs:{\"name\":\"cliente\",\"id\":\"cliente\",\"options\":_vm.clients_by_company,\"text-field\":\"client_company_name\"},model:{value:(_vm.user.client_id),callback:function ($$v) {_vm.$set(_vm.user, \"client_id\", $$v)},expression:\"user.client_id\"}},[_c('template',{slot:\"first\"},[_c('option',{domProps:{\"value\":null}},[_vm._v(_vm._s(_vm.$t('message.seleccion_cliente')))])])],2),_vm._v(\" \"),(_vm.errors.has('cliente'))?_c('p',{staticClass:\"text-danger\"},[_vm._v(_vm._s(_vm.errors.first('cliente')))]):_vm._e()],1),_vm._v(\" \"),_c('b-input-group',{staticClass:\"mb-3\"},[_c('b-input-group-prepend',[_c('b-input-group-text',[_c('i',{staticClass:\"icon-user\"})])],1),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.user.email),expression:\"user.email\"},{name:\"validate\",rawName:\"v-validate\",value:('required|email'),expression:\"'required|email'\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":_vm.$t('message.email'),\"name\":\"email\",\"id\":\"email\",\"autocomplete\":\"email\"},domProps:{\"value\":(_vm.user.email)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.user, \"email\", $event.target.value)}}}),_vm._v(\" \"),(_vm.errors.has('email'))?_c('p',{staticClass:\"text-danger\"},[_vm._v(_vm._s(_vm.errors.first('email')))]):_vm._e()],1)],1),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isVisible('password')),expression:\"isVisible('password')\"}]},[_c('b-input-group',{staticClass:\"mb-3\"},[_c('b-input-group-prepend',[_c('b-input-group-text',[_c('i',{staticClass:\"icon-lock\"})])],1),_vm._v(\" \"),_c('input',{directives:[{name:\"validate\",rawName:\"v-validate\",value:(_vm.isVisible('password')?'required|min:8': ''),expression:\"isVisible('password')?'required|min:8': ''\"},{name:\"model\",rawName:\"v-model\",value:(_vm.user.password),expression:\"user.password\"}],ref:\"password\",staticClass:\"form-control\",attrs:{\"name\":\"password\",\"type\":\"password\",\"placeholder\":_vm.$t('message.pwd')},domProps:{\"value\":(_vm.user.password)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.user, \"password\", $event.target.value)}}}),_vm._v(\" \"),(_vm.errors.has('password'))?_c('p',{staticClass:\"text-danger\"},[_vm._v(_vm._s(_vm.errors.first('password')))]):_vm._e()],1),_vm._v(\" \"),_c('b-input-group',{staticClass:\"mb-4\"},[_c('b-input-group-prepend',[_c('b-input-group-text',[_c('i',{staticClass:\"icon-lock\"})])],1),_vm._v(\" \"),_c('input',{directives:[{name:\"validate\",rawName:\"v-validate\",value:(_vm.isVisible('password')?'required|confirmed:password':''),expression:\"isVisible('password')?'required|confirmed:password':''\"}],staticClass:\"form-control\",attrs:{\"type\":\"password\",\"name\":\"verificarPassword\",\"placeholder\":_vm.$t('message.repeatPwd'),\"data-vv-as\":\"password\"}}),_vm._v(\" \"),(_vm.errors.has('verificarPassword'))?_c('p',{staticClass:\"text-danger\"},[_vm._v(_vm._s(_vm.errors.first('verificarPassword')))]):_vm._e()],1)],1)])],1)],1)}\nvar staticRenderFns = []\nexport { render, staticRenderFns }\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-278f12ec\",\"hasScoped\":true,\"optionsId\":\"0\",\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/UsersManager.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}